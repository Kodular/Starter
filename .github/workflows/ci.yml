name: CI

on:
  push:
    branches: [master]
    tags:
      - 'v*'
  pull_request:
    branches: [master]

  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up V version latest
        uses: nocturlab/setup-vlang-action@master
        with:
          v-version: latest

      - name: Build executable
        run: |
          mkdir out
          v -o out/KodularStarter KodularStarter.v

      - name: Set executable bit
        if: matrix.os != 'windows-latest'
        run: chmod +x ./out/KodularStarter

      - id: dl-rcedit
        name: Download rcedit
        if: matrix.os == 'windows-latest'
        uses: carlosperate/download-file-action@v1.0.3
        with:
            file-url: 'https://github.com/electron/rcedit/releases/download/v1.1.1/rcedit-x64.exe'

      - name: Set icon to exe
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          "${{ steps.dl-rcedit.outputs.file-path }}" "out/KodularStarter.exe" --set-icon icon.ico --set-file-version 2 --set-product-version 2 --set-version-string "ProductName" "Kodular Starter"

      - uses: actions/upload-artifact@v2
        with:
          name: KodularStarter_${{ matrix.os }}
          path: out/*
          
  release:
    name: Create GitHub release
    needs: build

    runs-on: ubuntu-latest

    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  publish:
    name: Publish 
    needs: release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        version: [ubuntu, windows, macOS]    

    steps:
      - uses: actions/checkout@v1
      - name: Fetch artifacts
        uses: actions/download-artifact@v1
        with:
          name: ${{ matrix.version }}-latest
          path: ./${{ matrix.version }}
          
      - name: Get short tag name
        uses: jungwinter/split@v1
        id: split
        with:
          msg: ${{ github.ref }}
          seperator: /
      - name: Get release
        id: get_release_info
        uses: leahlundqvist/get-release@v1.3.1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ steps.split.outputs._2 }}

      - name: Upload release binary
        if: matrix.version == 'windows'
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./${{ matrix.version }}/KodularStarter.exe
          asset_name: KodularStarter_${{ matrix.os }}.exe
          asset_content_type: application/octet-stream

      - name: Upload release binary
        if: matrix.version != 'windows'
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./${{ matrix.version }}/KodularStarter
          asset_name: KodularStarter_${{ matrix.os }}
          asset_content_type: application/x-pie-executable
